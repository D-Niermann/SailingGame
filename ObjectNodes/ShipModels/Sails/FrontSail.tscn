[gd_scene load_steps=8 format=2]

[ext_resource path="res://ObjectNodes/ShipModels/DefaultModel/Sprites/segelVorn.png" type="Texture" id=1]
[ext_resource path="res://ObjectNodes/ShipModels/Sails/MainSail.gd" type="Script" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;

render_mode cull_disabled, depth_draw_alpha_prepass;
uniform sampler2D texture_albedo : hint_albedo;
uniform vec4 albedo : hint_color;
uniform float wave_size = 1.0;
uniform float wave_speed = 1.0;
uniform float noise_strength = 5.0;
uniform float side_wind_strength = 0.2;
uniform float time_offset = 0.0;
uniform float sail_in = 1.0; // how far in the sail is, 0 means farest out, 1 means fully pulled in 


uniform sampler2D uv_offset_texture : hint_black;
uniform vec2 uv_offset_scale = vec2(-0.2,-0.1);
uniform vec2 time_scale = vec2(0.3, 0.0);
uniform float face_distortion = 0.5;

void vertex(){
	vec2 base_uv_offset = UV * uv_offset_scale;
	base_uv_offset += (time_offset+TIME) * time_scale;
	
	float noise = texture(uv_offset_texture,base_uv_offset).r;
	float texture_based_offset = UV.x *(noise-0.5)* noise_strength;
	texture_based_offset *= UV.x;
	
	VERTEX.y += texture_based_offset + UV.x * sin(UV.x * 2.0 * 3.14 - (time_offset+TIME) * wave_speed) * wave_size;
	
	VERTEX.z += texture_based_offset * face_distortion + UV.x * UV.x*side_wind_strength;
	VERTEX.x += texture_based_offset * -face_distortion*3.0*UV.x - sail_in*UV.x;
	
	
}


void fragment(){
	// Sample noise
	vec2 base_uv_offset = UV * uv_offset_scale;
	vec4 albedo_tex = texture(texture_albedo,UV);
	ALBEDO = albedo_tex.rgb;
	ALPHA = albedo_tex.a;
	base_uv_offset += TIME * time_scale;
	float noise = texture(uv_offset_texture, base_uv_offset).r;
	float color = noise*3.0;
	ALBEDO *= vec3(color*0.5,color*0.4,color*0.4); //Display noise. Blue for valleys, green for peaks
}
"

[sub_resource type="OpenSimplexNoise" id=2]

[sub_resource type="NoiseTexture" id=3]
seamless = true
noise = SubResource( 2 )

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
render_priority = 2
shader = SubResource( 1 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/wave_size = 0.048
shader_param/wave_speed = 2.726
shader_param/noise_strength = 0.391
shader_param/side_wind_strength = -0.01
shader_param/time_offset = 0.0
shader_param/sail_in = 0.0
shader_param/uv_offset_scale = Vector2( -0.2, -0.1 )
shader_param/time_scale = Vector2( 0.079, -0.033 )
shader_param/face_distortion = 0.5
shader_param/texture_albedo = ExtResource( 1 )
shader_param/uv_offset_texture = SubResource( 3 )

[sub_resource type="PlaneMesh" id=5]
size = Vector2( 1.21, 2.842 )
subdivide_width = 12
subdivide_depth = 17

[node name="SailWithShader" type="Spatial"]
script = ExtResource( 3 )
__meta__ = {
"_edit_group_": true
}

[node name="Sail" type="MeshInstance" parent="."]
transform = Transform( 0.997332, -1.05879e-22, -0.0729945, -7.77983e-16, 1, -1.06297e-14, 0.0729945, 1.06581e-14, 0.997332, 0.497404, -8.27735e-17, 0.00776625 )
material_override = SubResource( 4 )
mesh = SubResource( 5 )
skeleton = NodePath("")
software_skinning_transform_normals = false
material/0 = null
