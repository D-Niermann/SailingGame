[gd_scene load_steps=13 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;

render_mode cull_disabled;

uniform float wave_size = 1.0;
uniform float wave_speed = 1.0;
uniform float noise_strength = 5.0;

uniform sampler2D uv_offset_texture : hint_black;
uniform vec2 uv_offset_scale = vec2(-0.2,-0.1);
uniform vec2 time_scale = vec2(0.3, 0.0);
uniform float face_distortion = 0.5;

void vertex(){
	vec2 base_uv_offset = UV * uv_offset_scale;
	base_uv_offset += TIME * time_scale;
	
	float noise = texture(uv_offset_texture,base_uv_offset).r;
	float texture_based_offset = (noise - 0.5)* noise_strength;
	texture_based_offset *= UV.x;
	
	VERTEX.y += texture_based_offset + UV.x * sin(UV.x * 2.0 * 3.14 - TIME * wave_speed) * wave_size;
	
	VERTEX.z += texture_based_offset * face_distortion + UV.x * UV.x;
	VERTEX.x += texture_based_offset * -face_distortion;
	
	
}


void fragment(){
	// Sample noise
	vec2 base_uv_offset = UV * uv_offset_scale;
	base_uv_offset += TIME * time_scale;
	float noise = texture(uv_offset_texture, base_uv_offset).r;
	float color = noise*2.0;
	ALBEDO = vec3(color*0.5,color*0.4,color*0.4); //Display noise. Blue for valleys, green for peaks
	if (UV.y>.3 && UV.y<.7){
		ALBEDO.z = 1.;
		
	}
	else{
		ALBEDO.x = 1.;
		ALBEDO.y = 1.;
	}
	//ALBEDO = vec3(1.0 - UV.x, 0.0, UV.x); //Display dampening. Red is full dampening, blue is none
}
"

[sub_resource type="OpenSimplexNoise" id=2]

[sub_resource type="NoiseTexture" id=3]
seamless = true
noise = SubResource( 2 )

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 1 )
shader_param/wave_size = 1.0
shader_param/wave_speed = 3.0
shader_param/noise_strength = 4.0
shader_param/uv_offset_scale = Vector2( -0.2, -0.1 )
shader_param/time_scale = Vector2( 0.1, 0 )
shader_param/face_distortion = 0.5
shader_param/uv_offset_texture = SubResource( 3 )

[sub_resource type="PlaneMesh" id=5]
material = SubResource( 4 )
size = Vector2( 10, 0.5 )
subdivide_width = 32
subdivide_depth = 3

[sub_resource type="Shader" id=6]
code = "shader_type spatial;
render_mode cull_disabled;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;

uniform float wave_size = 1.0;
uniform float wave_speed = 1.0;

uniform sampler2D uv_offset_texture : hint_black;
uniform vec2 uv_offset_scale = vec2(-0.2,-0.1);
uniform vec2 time_scale = vec2(0.3, 0.0);
uniform float face_distortion = 0.5;


void vertex() {
	vec2 base_uv_offset = UV * uv_offset_scale;
	base_uv_offset += TIME * time_scale;
	
	float noise = texture(uv_offset_texture,base_uv_offset).r;
	float texture_based_offset = (noise * 2.0 - 1.0);
	texture_based_offset *= UV.x;
	
	VERTEX.y += texture_based_offset + (UV.x * sin(UV.x * 2.0 * 3.14 - TIME * wave_speed) * wave_size);
	
	VERTEX.z += texture_based_offset *  -1.0/2.0 * face_distortion;
	VERTEX.x += texture_based_offset * -face_distortion;
}


void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
}
"

[sub_resource type="OpenSimplexNoise" id=7]
period = 50.0
lacunarity = 0.5

[sub_resource type="NoiseTexture" id=8]
seamless = true
noise = SubResource( 7 )

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 6 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/wave_size = 0.5
shader_param/wave_speed = 6.0
shader_param/uv_offset_scale = Vector2( -0.2, -0.1 )
shader_param/time_scale = Vector2( 0.3, 0 )
shader_param/face_distortion = 0.5
shader_param/uv_offset_texture = SubResource( 8 )

[sub_resource type="PlaneMesh" id=10]
material = SubResource( 9 )
size = Vector2( 3, 2 )
subdivide_width = 10
subdivide_depth = 10

[sub_resource type="SpatialMaterial" id=11]
albedo_color = Color( 0.709804, 0.713726, 0.760784, 1 )
metallic = 0.56
metallic_specular = 0.24
roughness = 0.63

[sub_resource type="CylinderMesh" id=12]
material = SubResource( 11 )
top_radius = 0.1
bottom_radius = 0.1
height = 4.105

[node name="Flag3DScene" type="Spatial"]

[node name="Flag" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 5.00655, 3.50751, -0.00606203 )
mesh = SubResource( 5 )
material/0 = null

[node name="Flag2" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, -1, 0, 1, -1.62921e-07, 1.5, 3, 0 )
visible = false
mesh = SubResource( 10 )
material/0 = null

[node name="Pole" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 0 )
visible = false
mesh = SubResource( 12 )
material/0 = null
