[gd_scene load_steps=8 format=2]

[ext_resource path="res://ObjectNodes/Flags/BaseFlag/ExampleflagTexture.png" type="Texture" id=1]
[ext_resource path="res://ObjectNodes/Flags/BaseFlag/FlagScript.gd" type="Script" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;

render_mode depth_draw_alpha_prepass, cull_disabled;
uniform sampler2D texture_albedo : hint_albedo;
uniform vec4 albedo : hint_color;
uniform float wave_size = 1.0;
uniform float wave_speed = 1.0;
uniform float noise_strength = 5.0;
uniform float gravity = 1.0;
uniform float time_offset = 0.0;


uniform sampler2D uv_offset_texture : hint_black;
uniform vec2 uv_offset_scale = vec2(-0.2,-0.1);
uniform vec2 time_scale = vec2(0.3, 0.0);
uniform float face_distortion = 0.5;

void vertex(){
	vec2 base_uv_offset = UV * uv_offset_scale;
	base_uv_offset += (TIME+time_offset) * time_scale;
	
	float noise = (0.5+UV.x)* texture(uv_offset_texture,base_uv_offset).r;
	float texture_based_offset = (noise - 0.5)* noise_strength;
	texture_based_offset *= UV.x;
	
	VERTEX.y += texture_based_offset + UV.x * sin(UV.x * 2.0 * 3.14 - (TIME+time_offset) * wave_speed) * wave_size;
	
	VERTEX.z += 0.5-face_distortion + UV.x * UV.x*gravity+UV.x*sin((TIME+time_offset)*0.5)*gravity/3.0;
	VERTEX.x += texture_based_offset * -face_distortion;
	
	
}


void fragment(){
	// Sample noise
	// vec2 base_uv_offset = UV * uv_offset_scale;
	vec4 albedo_tex = texture(texture_albedo,UV);
	ALBEDO = albedo_tex.rgb;
	ALPHA = albedo_tex.a;
	
//	ALPHA = albedo_tex.a;
	// base_uv_offset += TIME * time_scale;
	// float noise = texture(uv_offset_texture, base_uv_offset).r;
	// float color = noise*5.0;
	// ALBEDO *= vec3(color*0.5,color*0.4,color*0.4); //Display noise. Blue for valleys, green for peaks
	// ALBEDO += vec3(1.0 - UV.x, 0.0, UV.x); //Display dampening. Red is full dampening, blue is none
}
"

[sub_resource type="OpenSimplexNoise" id=2]

[sub_resource type="NoiseTexture" id=3]
seamless = true
noise = SubResource( 2 )

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
render_priority = 2
shader = SubResource( 1 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/wave_size = 0.235
shader_param/wave_speed = 1.905
shader_param/noise_strength = 3.85
shader_param/gravity = -1.427
shader_param/time_offset = 0.0
shader_param/uv_offset_scale = Vector2( -0.2, -0.1 )
shader_param/time_scale = Vector2( 0.068, 0 )
shader_param/face_distortion = 0.5
shader_param/texture_albedo = ExtResource( 1 )
shader_param/uv_offset_texture = SubResource( 3 )

[sub_resource type="PlaneMesh" id=5]
size = Vector2( 2.407, 1.5 )
subdivide_width = 20
subdivide_depth = 5

[node name="BigFlag" type="Spatial"]
script = ExtResource( 3 )

[node name="Flag" type="MeshInstance" parent="."]
transform = Transform( 0.999999, -7.10542e-15, 2.11758e-22, 0, -4.37114e-08, 1, -7.10542e-15, -0.999999, -4.37114e-08, 1.191, 0.714, 0 )
material_override = SubResource( 4 )
mesh = SubResource( 5 )
skeleton = NodePath("")
material/0 = null
